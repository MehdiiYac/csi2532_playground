Exercice 1:

CREATE TABLE Book(
  Bookname VARCHAR(20),
  Authorid INTEGER,
  Amount NUMERIC(2,5)
  book_type VARCHAR(25) IN ("Fictionadulte", "Non-fiction-adulte", "Fiction-jeunesse", "Non-fictionjeunesse"),
  CONSTRAINT rating_check CHECK (rating >= 1 AND rating <= 10),
  Constraint authorid_fk FOREIGN KEY referenes Author(authorid) ON UPDATE CASCADE ON DELETE CASCADE
);

Exercice 2:
i)
CREATE TABLE Author(
  authorid INTEGER,
  Authorname VARCHAR(20),
  PRIMARY KEY authorid
);
ii)
CREATE ASSERTION maxbooks 
CHECK((select count(*) FROM  Book) + (select count(*) FROM Author)) <= 10000

Exercice 3:
CREATE TRIGGER	check_rating
	BEFORE UPDATE ON Book
	FOR EACH ROW
	WHEN (OLD.rating IS DISTINCT FROM NEW.rating)
	EXECUTE PROCEDURE check_book_rating();
  
  Exercice 4:
i)
  ALTER TABLE Author(
	ADD author_sum_rating REAL DEFAULT 0
);
ii) 
CREATE TRIGGER modify_sum_rating
  BEFORE UPDATE ON Book
  FOR EACH ROW
  WHEN (OLD.rating IS DISTINCT FROM NEW.rating)
  EXECUTE PROCEDURE calculate_author_rating();
 
